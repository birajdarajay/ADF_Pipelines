{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFINSTANCEAJAYBIRAJDAR"
		},
		"EventBasedTriggered_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1b80b2ab-6c01-4393-ae53-3aefeb14943f/resourceGroups/ADF_TEST_RESOURCE_GROUP/providers/Microsoft.Storage/storageAccounts/demostorageajaybirajdar"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PipelineCopyDataFromOracleDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetOracleDBDemo",
								"type": "DatasetReference",
								"parameters": {
									"userName": {
										"value": "@pipeline().parameters.SourceUserName",
										"type": "Expression"
									},
									"SchemaName": {
										"value": "@pipeline().parameters.SourceSchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetOracleDBDemo",
								"type": "DatasetReference",
								"parameters": {
									"userName": {
										"value": "@pipeline().parameters.TargetUserName",
										"type": "Expression"
									},
									"SchemaName": {
										"value": "@pipeline().parameters.TargetSchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceUserName": {
						"type": "String"
					},
					"SourceSchemaName": {
						"type": "String"
					},
					"SourceTableName": {
						"type": "String"
					},
					"TargetUserName": {
						"type": "String"
					},
					"TargetSchemaName": {
						"type": "String"
					},
					"TargetTableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T10:31:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipelineCopyDataFromOracleDBHardcoded')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"description": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{'ATM'}.@{'EMP'}"
							},
							{
								"name": "Destination",
								"value": "@{'AJAY'}.@{'EMP'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EMP_ID",
											"type": "Decimal"
										},
										"sink": {
											"name": "EMP_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetOracleDBDemo",
								"type": "DatasetReference",
								"parameters": {
									"userName": "ATM",
									"SchemaName": "ATM",
									"TableName": "EMP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetOracleDBDemo",
								"type": "DatasetReference",
								"parameters": {
									"userName": "AJAY",
									"SchemaName": "AJAY",
									"TableName": "EMP"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T10:45:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipelineReturnValueInvoke')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PipelineReturnVariable",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineReturnVariable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "PipelineReturnVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "LinkServiceOracleIntegrationRuntime",
							"type": "LinkedServiceReference",
							"parameters": {
								"username": "Ajay",
								"host": "DESKTOP-E9268CJ",
								"port": 1521,
								"servicename": "orcl.168.25.203",
								"password": "welcome1"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@insert into emp values ('@{activity('PipelineReturnVariable').output.pipelineReturnValue.Run_name}','@{activity('PipelineReturnVariable').output.pipelineReturnValue.Run_id}')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-20T06:59:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PivotDfPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PivotDfPipeline",
				"activities": [
					{
						"name": "PivotDF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PivotDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PivotEmpSource": {},
									"Pivotoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-09T08:32:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelectDFPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SelectDFPipeline",
				"activities": [
					{
						"name": "SelectDF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SelectDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeData": {},
									"SelectDfOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-09T08:05:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortTransformatioDfPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SortTransformationDF",
						"description": "SortTransformationDF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SortDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeSource": {},
									"SortTransformationOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-09T06:53:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnionDfPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnionDataFlow",
						"description": "UnionDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UnionDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeDataSource": {},
									"DeptDataSource": {},
									"UnionDFOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-08T11:11:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WriteCacheSinkPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WriteCacheSinkPipeline",
				"activities": [
					{
						"name": "CacheOutput",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WriteCacheActivity",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MaxSal",
							"value": {
								"value": "@activity('WriteCacheActivity').output.runStatus.output.CacheSink.value[0].Max_Sal",
								"type": "Expression"
							}
						}
					},
					{
						"name": "WriteCacheActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "WriteCacheSink",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpSource": {},
									"CacheSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"MaxSal": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-18T09:31:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventBasedTriggered')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "EventBasedTriggered",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PipelineCopyDataFromFile",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "CreateVariablePipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adfdemo/blobs/Input/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EventBasedTriggered_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerScheduleDemo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TriggerDemo",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PipelineCopyDataFromFile",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-08-29T06:56:00Z",
						"endTime": "2023-09-02T22:56:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								5,
								8
							],
							"hours": [
								10,
								15
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTumblingDemo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TriggerTumblingDemo",
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PipelineCopyDataFromFile",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 1,
					"startTime": "2023-01-01T07:23:00Z",
					"endTime": "2023-02-28T07:23:00Z",
					"delay": "00:04:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 500
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterPipelineInvokeAnotherPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InvokingAnotherPipeline",
						"description": "Invoking Another pipeline from master pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineCopyDataFromOracleDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceUserName": "AJAY",
								"SourceSchemaName": "AJAY",
								"SourceTableName": "EMP",
								"TargetUserName": "ATM",
								"TargetSchemaName": "ATM",
								"TargetTableName": "EMP"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-02T07:40:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PipelineCopyDataFromOracleDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataAndifActivityPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\r\n    formatDateTime(utcNow(),'yyyy-mm-dd'),\r\nformatDateTime(activity('Get Metadata1').output.lastModified,'yyyy-mm-dd')\r\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MasterPipelineInvokeAnotherPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "InputDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "OutputDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-02T08:42:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MasterPipelineInvokeAnotherPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ValidationActivityPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FolderValidationActivity",
						"description": "It will check file is 2 MB or NOT perform the activity based on success and failue",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.12:00:00",
							"sleep": 10,
							"minimumSize": 2
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FolderValidationActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WaitActivityPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FolderValidationActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GetMetadataAndifActivityPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-04T05:57:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/GetMetadataAndifActivityPipeline')]"
			]
		}
	]
}