{
	"name": "EmpDeptDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EMPDataSorce",
						"type": "DatasetReference"
					},
					"name": "EMPSource",
					"description": "EMPSource"
				},
				{
					"dataset": {
						"referenceName": "DepartmentData",
						"type": "DatasetReference"
					},
					"name": "DEPTSource",
					"description": "DEPTSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmpDeptOutputDataset",
						"type": "DatasetReference"
					},
					"name": "OutputData",
					"description": "OutputData"
				}
			],
			"transformations": [
				{
					"name": "JoinEMPDEPT"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EMPSource",
				"source(output(",
				"          DEPARTMENT_ID as string,",
				"          DEPARTMENT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DEPTSource",
				"EMPSource, DEPTSource join(EMPSource@DEPARTMENT_ID == DEPTSource@DEPARTMENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinEMPDEPT",
				"JoinEMPDEPT derive(LAST_NAME = upper(LAST_NAME),",
				"          FIRST_NAME = upper(LAST_NAME)) ~> ModifyColumns1",
				"ModifyColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Emp_dept_output_data'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EMPLOYEE_ID,",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          EMAIL,",
				"          PHONE_NUMBER,",
				"          SALARY,",
				"          DEPARTMENT_NAME",
				"     ),",
				"     partitionBy('hash', 1)) ~> OutputData"
			]
		}
	}
}