{
	"name": "NewBranchDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EMPDataSorce",
						"type": "DatasetReference"
					},
					"name": "EmployeeSource",
					"description": "EmployeeSource"
				},
				{
					"dataset": {
						"referenceName": "DepartmentData",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmpDeptOutputDataset",
						"type": "DatasetReference"
					},
					"name": "NewBranchOutput",
					"description": "NewBranchOutput"
				},
				{
					"dataset": {
						"referenceName": "EmpDeptOutputDataset",
						"type": "DatasetReference"
					},
					"name": "TotalEmp",
					"description": "TotalEmp"
				}
			],
			"transformations": [
				{
					"name": "CountOfEmployee",
					"description": "CountOfEmployee"
				},
				{
					"name": "EmpDeptJoin",
					"description": "Inner join on 'EmployeeSource' and 'DepartmentSource'"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmployeeSource",
				"source(output(",
				"          DEPARTMENT_ID as string,",
				"          DEPARTMENT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"EmployeeSource aggregate(groupBy(DEPARTMENT_ID),",
				"     All_employee = count(EMPLOYEE_ID)) ~> CountOfEmployee",
				"EmployeeSource, Department join(EmployeeSource@DEPARTMENT_ID == Department@DEPARTMENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpDeptJoin",
				"EmpDeptJoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['NewBranchOutput1'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> NewBranchOutput",
				"CountOfEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['TotEMP'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> TotalEmp"
			]
		}
	}
}